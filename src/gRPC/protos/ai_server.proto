syntax = "proto3";

// option objc_class_prefix = "HLW";

package ai_server;

service OCR {
  //express -> AI
  rpc StartOCR (RequestStart) returns (ReplyOCRStart) {}
  //AI -> express
  rpc SendBBoxes (RequestSendBBoxes) returns (ReplySendBBoxes) {}
}

service Segmentation {
  //express -> AI
  rpc SplitImage (RequestMakeCut) returns (ReplyRequestMakeCut) {}
  rpc StartSegmentation (RequestStart) returns (ReplySegmentationStart) {}
  rpc UpdateMask(RequestMaskUpdate) returns (ReplyMaskUpdate) {}
  //AI -> express
  rpc InpaintComplete(RequestInpaintComplete) returns (ReplyInpaintComplete) {}
}

message RequestMakeCut{
  int32 req_id = 1;
  string type = 2;
  string image_path = 3;
}

message ReplyRequestMakeCut{
  int32 req_id = 1;
  int32 cut_count = 2;
  string cut_ranges = 3;
}

message RequestSendBBoxes{
  int32 req_id = 1;
  int32 cut_index = 2;
  string data = 3;
}

message ReplySendBBoxes{
  bool success = 1;
}

message RequestMaskUpdate{
  int32 req_id = 1;
  repeated bytes mask_rles = 2;
  int32 cut_index = 3;
  string image_path = 4;
}

message ReplyMaskUpdate{
  int32 req_id = 1;
}

message RequestInpaintComplete{
  int32 req_id = 1;
  int32 cut_index = 2;
  string file_name = 3;
}

message ReplyInpaintComplete{
  int32 req_id = 1;
}

message RequestStart {
  int32 req_id = 1;
  int32 cut_index = 2;
  string image_path = 3;
}

message ReplySegmentationStart {
  int32 req_id = 1;
  string mask = 2;
}

message ReplyOCRStart {
  int32 req_id = 1;
  string mask = 2;
}